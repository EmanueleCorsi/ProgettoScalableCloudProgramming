[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\UTENTE~1\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\UTENTE~1\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.7 (Oracle Corporation Java 1.8.0_202)
[debug] Load.defaultLoad until apply took 76.3243ms
[debug]           Load.loadUnit: plugins took 132.7199ms
[debug]           Load.loadUnit: defsScala took 0.1985ms
[debug] [Loading] Scanning directory C:\Users\Utente PC\IdeaProjects\ProgettoScalable\project
[debug]             Load.loadUnit: mkEval took 5.9662ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Utente PC\IdeaProjects\ProgettoScalable\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 11.64 ms
[info] loading settings for project progettoscalable-build from idea.sbt...
[debug]               Load.resolveProject(progettoscalable-build) took 37.5929ms
[debug]             Load.loadTransitive: finalizeProject(Project(id progettoscalable-build, base: C:\Users\Utente PC\IdeaProjects\ProgettoScalable\project, plugins: List(<none>))) took 69.3438ms
[debug] [Loading] Done in C:\Users\Utente PC\IdeaProjects\ProgettoScalable\project, returning: (progettoscalable-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 273.2221ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.924ms
[debug]         Load.loadUnit(file:/C:/Users/Utente%20PC/IdeaProjects/ProgettoScalable/project/, ...) took 415.7406ms
[debug]       Load.apply: load took 500.0386ms
[debug]       Load.apply: resolveProjects took 3.2601ms
[debug]       Load.apply: finalTransforms took 32.4781ms
[debug]       Load.apply: config.delegates took 4.4278ms
[debug]       Load.apply: Def.make(settings)... took 217.9363ms
[debug]       Load.apply: structureIndex took 61.565ms
[debug]       Load.apply: mkStreams took 1.6309ms
[info] loading project definition from C:\Users\Utente PC\IdeaProjects\ProgettoScalable\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1408.7355ms
[debug]     Load.loadUnit: defsScala took 0.0026ms
[debug] [Loading] Scanning directory C:\Users\Utente PC\IdeaProjects\ProgettoScalable
[debug]       Load.loadUnit: mkEval took 0.2214ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.9451 ms
[info] loading settings for project root from build.sbt...
[debug]         Load.resolveProject(root) took 16.9332ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Utente PC\IdeaProjects\ProgettoScalable, plugins: List(<none>))) took 19.8841ms
[debug] [Loading] Done in C:\Users\Utente PC\IdeaProjects\ProgettoScalable, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 57.2498ms
[debug]     Load.loadUnit: cleanEvalClasses took 1.8664ms
[debug]   Load.loadUnit(file:/C:/Users/Utente%20PC/IdeaProjects/ProgettoScalable/, ...) took 1468.6189ms
[debug] Load.apply: load took 1482.1743ms
[debug] Load.apply: resolveProjects took 0.5664ms
[debug] Load.apply: finalTransforms took 14.3807ms
[debug] Load.apply: config.delegates took 0.1943ms
[debug] Load.apply: Def.make(settings)... took 47.2486ms
[debug] Load.apply: structureIndex took 15.9139ms
[debug] Load.apply: mkStreams took 0.0031ms
[info] set current project to ProgettoScalable (in build file:/C:/Users/Utente%20PC/IdeaProjects/ProgettoScalable/)
[warn] there's a key that's not used by any other settings/tasks:
[warn]  
[warn] * root / mainClass
[warn]   +- C:\Users\Utente PC\IdeaProjects\ProgettoScalable\build.sbt:7
[warn]  
[warn] note: a setting might still be used by a command; to exclude a key from this `lintUnused` check
[warn] either append it to `Global / excludeLintKeys` or call .withRank(KeyRanks.Invisible) on the key
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 64631 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 64631, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to ProgettoScalable (in build file:/C:/Users/Utente%20PC/IdeaProjects/ProgettoScalable/)
[debug] > Exec(idea-shell, None, None)
